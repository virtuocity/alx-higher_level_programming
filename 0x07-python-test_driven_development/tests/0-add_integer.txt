>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(6, -3) 
3
>>> add_integer()      
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> add_integer('4', 1) 
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "E:\Projects\C\ALXSE\alx-higher_level_programming\0x07-python-test_driven_development\0-add_integer.py", line 21, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(4.2, 1) 
5
>>> add_integer(4, 1.3) 
5
>>> add_integer(2, '0')   
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "E:\Projects\C\ALXSE\alx-higher_level_programming\0x07-python-test_driven_development\0-add_integer.py", line 23, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer
>>> add_integer(2)           
100
>>> add_integer(1e300, 4) 
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "E:\Projects\C\ALXSE\alx-higher_level_programming\0x07-python-test_driven_development\0-add_integer.py", line 20, in add_integer
    raise OverflowError("a is too large")
OverflowError: a is too large
>>> add_integer(4, 1e300) 
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "E:\Projects\C\ALXSE\alx-higher_level_programming\0x07-python-test_driven_development\0-add_integer.py", line 24, in add_integer
    raise OverflowError("b is too large")
OverflowError: b is too large