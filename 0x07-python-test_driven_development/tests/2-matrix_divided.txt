
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

    >>> print(matrix_divided([1,2,3],3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> print(matrix_divided([[1,2,3], [1,2,3]], 3))
    [[0.33, 0.67, 1.0], [0.33, 0.67, 1.0]]
    >>> print(matrix_divided([[1,2,3], [1.8,2,3]], 3))
    [[0.33, 0.67, 1.0], [0.6, 0.67, 1.0]]
    >>> print(matrix_divided([[1,2,3], [1.8,2,3,4]], 3))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size
    >>> print(matrix_divided([[1,2,3], [1.8,2,3,4]], 'a'))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size
    >>> print(matrix_divided([[1,2,3], [1e100,2,3]], 3)) 
    Traceback (most recent call last):
    File "<stdin>", line 1, in <module>
    File "E:\Projects\C\ALXSE\alx-higher_level_programming\0x07-python-test_driven_development\2-matrix_divided.py", 
    line 30, in matrix_divided
        raise OverflowError("number is too large")
    OverflowError: number is too large
    >>> print(matrix_divided([[1,2,3], [1.8,2,3]], '0'))
    Traceback (most recent call last):
    TypeError: div must be a number
    >>> print(matrix_divided([[1,2,3], [1.8,2,3]], 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero